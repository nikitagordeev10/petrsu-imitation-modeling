// ================================= Вспомогательные функции для решения задачи =================================

// Функция вычисления знака формулой векторного произведения
// Используется для проверки принадлежности точки треугольнику
Функция ВычислитьЗнакПлощади(Точка1, Точка2, Точка3)
    Возврат (Точка1[0] - Точка3[0]) * (Точка2[1] - Точка3[1]) - (Точка2[0] - Точка3[0]) * (Точка1[1] - Точка3[1]);
КонецФункции

// Проверяет, лежит ли точка P внутри треугольника ABC.
// Возвращает Истина, если все три векторных произведения одного знака.
Функция ТочкаПринадлежитТреугольнику(ПроверяемаяТочка, ВершинаA, ВершинаB, ВершинаC) 
	// Вычисляем, с какой стороны от каждой стороны лежит точка
    Знак1 = ВычислитьЗнакПлощади(ПроверяемаяТочка, ВершинаA, ВершинаB);
    Знак2 = ВычислитьЗнакПлощади(ПроверяемаяТочка, ВершинаB, ВершинаC);
    Знак3 = ВычислитьЗнакПлощади(ПроверяемаяТочка, ВершинаC, ВершинаA);
    
    ЕстьОтрицательные = (Знак1 < 0) ИЛИ (Знак2 < 0) ИЛИ (Знак3 < 0);
    ЕстьПоложительные = (Знак1 > 0) ИЛИ (Знак2 > 0) ИЛИ (Знак3 > 0);
    
    // Если все D1, D2, D3 одного знака (все > 0 или все < 0) → точка внутри. Иначе — снаружи.
    Возврат НЕ (ЕстьОтрицательные И ЕстьПоложительные);
КонецФункции

// Функция генерации случайной точки в заданном прямоугольнике
Функция СгенерироватьСлучайнуюТочку(МинимумX, МаксимумX, МинимумY, МаксимумY)
    Точка = Новый Массив(2);
	// Для каждой точки случайно выбираем X и Y в диапазоне [Минимум, Максимум]
    Точка[0] = МинимумX + (Математика.СлучайноеЧислоОт0До1() * (МаксимумX - МинимумX));
    Точка[1] = МинимумY + (Математика.СлучайноеЧислоОт0До1() * (МаксимумY - МинимумY));
    Возврат Точка;
КонецФункции

// ================================= Функции для решения задачи =================================

// Основная функция вычисления площади пересечения методом Монте-Карло
Функция ВычислитьПлощадьПересечения(Треугольник1, Треугольник2, КоличествоТочек)
    КоличествоВнутри = 0;
    
    // Инициализация границ охватывающего прямоугольника
    МинимумX = Треугольник1[0][0];
    МаксимумX = Треугольник1[0][0];
    МинимумY = Треугольник1[0][1];
    МаксимумY = Треугольник1[0][1];
    
    // Определение границ прямоугольника, содержащего оба треугольника
	// Нужно найти минимальные и максимальные X и Y среди всех вершин обоих треугольников.
    Для Индекс = 0 По 2 Цикл
        // Для первого треугольника
        Если Треугольник1[Индекс][0] < МинимумX Тогда МинимумX = Треугольник1[Индекс][0]; КонецЕсли;
        Если Треугольник1[Индекс][0] > МаксимумX Тогда МаксимумX = Треугольник1[Индекс][0]; КонецЕсли;
        Если Треугольник1[Индекс][1] < МинимумY Тогда МинимумY = Треугольник1[Индекс][1]; КонецЕсли;
        Если Треугольник1[Индекс][1] > МаксимумY Тогда МаксимумY = Треугольник1[Индекс][1]; КонецЕсли;
        
        // Для второго треугольника
        Если Треугольник2[Индекс][0] < МинимумX Тогда МинимумX = Треугольник2[Индекс][0]; КонецЕсли;
        Если Треугольник2[Индекс][0] > МаксимумX Тогда МаксимумX = Треугольник2[Индекс][0]; КонецЕсли;
        Если Треугольник2[Индекс][1] < МинимумY Тогда МинимумY = Треугольник2[Индекс][1]; КонецЕсли;
        Если Треугольник2[Индекс][1] > МаксимумY Тогда МаксимумY = Треугольник2[Индекс][1]; КонецЕсли;
    КонецЦикла;
    
    // Генерация случайных точек и проверка принадлежности
    Для Индекс = 1 По КоличествоТочек Цикл
        Точка = СгенерироватьСлучайнуюТочку(МинимумX, МаксимумX, МинимумY, МаксимумY);
		
		// Точка принадлежит пересечению только если она лежит внутри первого треугольника и внутри второго треугольника
        ВПервомТреугольнике = ТочкаПринадлежитТреугольнику(Точка, Треугольник1[0], Треугольник1[1], Треугольник1[2]);
        ВоВторомТреугольнике = ТочкаПринадлежитТреугольнику(Точка, Треугольник2[0], Треугольник2[1], Треугольник2[2]);
        
        Если ВПервомТреугольнике И ВоВторомТреугольнике Тогда
            КоличествоВнутри = КоличествоВнутри + 1;
        КонецЕсли;
    КонецЦикла;
    
    // Вычисление площади пересечения, считаем долю точек, попавших в пересечение
    ПлощадьПрямоугольника = (МаксимумX - МинимумX) * (МаксимумY - МинимумY);
    ПлощадьПересечения = ПлощадьПрямоугольника * (КоличествоВнутри / КоличествоТочек);
    
    Возврат ПлощадьПересечения;
КонецФункции

// ================================= Команды формы =================================

&НаКлиенте
Процедура ВычислитьПлощадьПересеченияТреугольников(Команда)
    // Пример 1
    Треугольник1 = Новый Массив(3);
    Треугольник1[0] = Новый Массив(2); Треугольник1[0][0] = 0; Треугольник1[0][1] = 0;
    Треугольник1[1] = Новый Массив(2); Треугольник1[1][0] = 4; Треугольник1[1][1] = 0;
    Треугольник1[2] = Новый Массив(2); Треугольник1[2][0] = 2; Треугольник1[2][1] = 3;
    
    Треугольник2 = Новый Массив(3);
    Треугольник2[0] = Новый Массив(2); Треугольник2[0][0] = 1; Треугольник2[0][1] = 1;
    Треугольник2[1] = Новый Массив(2); Треугольник2[1][0] = 5; Треугольник2[1][1] = 1;
    Треугольник2[2] = Новый Массив(2); Треугольник2[2][0] = 3; Треугольник2[2][1] = 4;
	
	// X ∈ [0, 5], Y ∈ [0, 4]
    Площадь1 = ВычислитьПлощадьПересечения(Треугольник1, Треугольник2, 10000);
    Сообщить("Пример 1. Площадь пересечения: " + Площадь1);
    
    // Пример 2
    Треугольник3 = Новый Массив(3);
    Треугольник3[0] = Новый Массив(2); Треугольник3[0][0] = 2; Треугольник3[0][1] = 0;
    Треугольник3[1] = Новый Массив(2); Треугольник3[1][0] = 4; Треугольник3[1][1] = 0;
    Треугольник3[2] = Новый Массив(2); Треугольник3[2][0] = 2; Треугольник3[2][1] = 3;
    
    Треугольник4 = Новый Массив(3);
    Треугольник4[0] = Новый Массив(2); Треугольник4[0][0] = 3; Треугольник4[0][1] = 1;
    Треугольник4[1] = Новый Массив(2); Треугольник4[1][0] = 5; Треугольник4[1][1] = 1;
    Треугольник4[2] = Новый Массив(2); Треугольник4[2][0] = 3; Треугольник4[2][1] = 4;
    
    Площадь2 = ВычислитьПлощадьПересечения(Треугольник3, Треугольник4, 10000);
    Сообщить("Пример 2. Площадь пересечения: " + Площадь2);
    
    // Пример 3 (треугольники с общей вершиной)
    Треугольник5 = Новый Массив(3);
    Треугольник5[0] = Новый Массив(2); Треугольник5[0][0] = 2; Треугольник5[0][1] = 0;
    Треугольник5[1] = Новый Массив(2); Треугольник5[1][0] = 4; Треугольник5[1][1] = 0;
    Треугольник5[2] = Новый Массив(2); Треугольник5[2][0] = 2; Треугольник5[2][1] = 3;
    
    Треугольник6 = Новый Массив(3);
    Треугольник6[0] = Новый Массив(2); Треугольник6[0][0] = 0; Треугольник6[0][1] = 0;
    Треугольник6[1] = Новый Массив(2); Треугольник6[1][0] = 2; Треугольник6[1][1] = 0;
    Треугольник6[2] = Новый Массив(2); Треугольник6[2][0] = 2; Треугольник6[2][1] = 3;
    
    Площадь3 = ВычислитьПлощадьПересечения(Треугольник5, Треугольник6, 10000);
    Сообщить("Пример 3. Площадь пересечения: " + Площадь3);
КонецПроцедуры