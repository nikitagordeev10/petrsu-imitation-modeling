// Функция для вычисления знака площади треугольника
Функция ЗнакПлощади(p1, p2, p3)
    Возврат (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1]);
КонецФункции

// Функция проверки, находится ли точка внутри треугольника
Функция ТочкаВнутриТреугольника(p, a, b, c)
    d1 = ЗнакПлощади(p, a, b);
    d2 = ЗнакПлощади(p, b, c);
    d3 = ЗнакПлощади(p, c, a);
    
    has_neg = (d1 < 0) ИЛИ (d2 < 0) ИЛИ (d3 < 0);
    has_pos = (d1 > 0) ИЛИ (d2 > 0) ИЛИ (d3 > 0);
    
    Возврат НЕ (has_neg И has_pos);
КонецФункции

// Генерация случайной точки в прямоугольнике
Функция СлучайнаяТочка(min_x, max_x, min_y, max_y)
    p = Новый Массив(2);
    ГСЧ = Новый ГенераторСлучайныхЧисел();
    p[0] = min_x + (ГСЧ.СлучайноеЧисло(0, 1000000) / 1000000.0) * (max_x - min_x);
    p[1] = min_y + (ГСЧ.СлучайноеЧисло(0, 1000000) / 1000000.0) * (max_y - min_y);
    Возврат p;
КонецФункции            

// Вычисление площади методом Монте-Карло
Функция МонтеКарлоПлощадь(t1, t2, num_samples)
    count_inside = 0;
    min_x = t1[0][0];
    max_x = t1[0][0];
    min_y = t1[0][1];
    max_y = t1[0][1];
    
    // Определяем границы охватывающег0о прямоугольника
    Для i = 0 По 2 Цикл
        Если t1[i][0] < min_x Тогда min_x = t1[i][0]; КонецЕсли;
        Если t1[i][0] > max_x Тогда max_x = t1[i][0]; КонецЕсли;
        Если t1[i][1] < min_y Тогда min_y = t1[i][1]; КонецЕсли;
        Если t1[i][1] > max_y Тогда max_y = t1[i][1]; КонецЕсли;
        Если t2[i][0] < min_x Тогда min_x = t2[i][0]; КонецЕсли;
        Если t2[i][0] > max_x Тогда max_x = t2[i][0]; КонецЕсли;
        Если t2[i][1] < min_y Тогда min_y = t2[i][1]; КонецЕсли;
        Если t2[i][1] > max_y Тогда max_y = t2[i][1]; КонецЕсли;
    КонецЦикла;
    
    // Метод Монте-Карло
    Для i = 1 По num_samples Цикл
        p = СлучайнаяТочка(min_x, max_x, min_y, max_y);
        Если ТочкаВнутриТреугольника(p, t1[0], t1[1], t1[2]) И ТочкаВнутриТреугольника(p, t2[0], t2[1], t2[2]) Тогда
            count_inside = count_inside + 1;
        КонецЕсли;
    КонецЦикла;
    
    rectangle_area = (max_x - min_x) * (max_y - min_y);
    Возврат rectangle_area * (count_inside / num_samples);
КонецФункции

&НаКлиенте
Процедура Сгенерировать(Команда)
//    t1 = Новый Массив(3);
//    t2 = Новый Массив(3);
//    num_samples = 0;
    
	//Сообщить("Введите координаты первого треугольника (x y):");
	//Для i = 0 По 2 Цикл
	//    t1[i] = Новый Массив(2);
	//    Сообщить("Точка " + (i + 1) + ":");
	//    t1[i][0] = ВвестиЧисло("x: ");
	//    t1[i][1] = ВвестиЧисло("y: ");
	//КонецЦикла;
	//
	//Сообщить("Введите координаты второго треугольника (x y):");
	//Для i = 0 По 2 Цикл
	//    t2[i] = Новый Массив(2);
	//    Сообщить("Точка " + (i + 1) + ":");
	//    t2[i][0] = ВвестиЧисло("x: ");
	//    t2[i][1] = ВвестиЧисло("y: ");
	//КонецЦикла;
    
	//num_samples = ВвестиЧисло("Введите количество случайных точек для Монте-Карло: ");

    // Задаем координаты первого треугольника
    t1_1 = Новый Массив(3);
    t1_1[0] = Новый Массив(2);
    t1_1[0][0] = 0; t1_1[0][1] = 0;  
    t1_1[1] = Новый Массив(2);
    t1_1[1][0] = 4; t1_1[1][1] = 0;  
    t1_1[2] = Новый Массив(2);
    t1_1[2][0] = 2; t1_1[2][1] = 3; 
    
    // Задаем координаты второго треугольника
    t1_2 = Новый Массив(3);
    t1_2[0] = Новый Массив(2);
    t1_2[0][0] = 1; t1_2[0][1] = 1;  
    t1_2[1] = Новый Массив(2);
    t1_2[1][0] = 5; t1_2[1][1] = 1;  
    t1_2[2] = Новый Массив(2);
    t1_2[2][0] = 3; t1_2[2][1] = 4; 
    
    // Задаем количество случайных точек для метода Монте-Карло
    num_samples = 10000;
	
    intersection_area1 = МонтеКарлоПлощадь(t1_1, t1_2, num_samples);
    Сообщить("Приблизительная площадь пересечения: " + intersection_area1); 
	
	// Задаем координаты первого треугольника
    t2_1 = Новый Массив(3);
    t2_1[0] = Новый Массив(2);
    t2_1[0][0] = 2; t2_1[0][1] = 0;  
    t2_1[1] = Новый Массив(2);
    t2_1[1][0] = 4; t2_1[1][1] = 0;  
    t2_1[2] = Новый Массив(2);
    t2_1[2][0] = 2; t2_1[2][1] = 3; 
    
    // Задаем координаты второго треугольника
    t2_2 = Новый Массив(3);
    t2_2[0] = Новый Массив(2);
    t2_2[0][0] = 3; t2_2[0][1] = 1;  
    t2_2[1] = Новый Массив(2);
    t2_2[1][0] = 5; t2_2[1][1] = 1;  
    t2_2[2] = Новый Массив(2);
    t2_2[2][0] = 3; t2_2[2][1] = 4; 
    
    // Задаем количество случайных точек для метода Монте-Карло
    num_samples = 10000;
	
    intersection_area = МонтеКарлоПлощадь(t2_1, t2_2, num_samples);
    Сообщить("Приблизительная площадь пересечения: " + intersection_area);        
	
		// Задаем координаты первого треугольника
    t3_1 = Новый Массив(3);
    t3_1[0] = Новый Массив(2);
    t3_1[0][0] = 2; t3_1[0][1] = 0;  
    t3_1[1] = Новый Массив(2);
    t3_1[1][0] = 4; t3_1[1][1] = 0;  
    t3_1[2] = Новый Массив(2);
    t3_1[2][0] = 2; t3_1[2][1] = 3; 
    
    // Задаем координаты второго треугольника
    t3_2 = Новый Массив(3);
    t3_2[0] = Новый Массив(2);
    t3_2[0][0] = 0; t3_2[0][1] = 0;  
    t3_2[1] = Новый Массив(2);
    t3_2[1][0] = 2; t3_2[1][1] = 0;  
    t3_2[2] = Новый Массив(2);
    t3_2[2][0] = 2; t3_2[2][1] = 3; 
    
    // Задаем количество случайных точек для метода Монте-Карло
    num_samples = 10000;
	
    intersection_area = МонтеКарлоПлощадь(t3_1, t3_2, num_samples);
    Сообщить("Приблизительная площадь пересечения: " + intersection_area);


КонецПроцедуры